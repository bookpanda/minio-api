{
    "swagger": "2.0",
    "info": {
        "description": "Object store API for personal projects",
        "title": "Minio API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/api/v1",
    "paths": {
        "/file/delete/{bucket}": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "specify the object's bucket and key to delete",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Delete object from minio",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Which bucket to delete object",
                        "name": "bucket",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "object key to delete",
                        "name": "fileKey",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.DeleteFileRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.DeleteFileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperrors.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apperrors.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperrors.AppError"
                        }
                    }
                }
            }
        },
        "/file/get/{bucket}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "specify the bucket and object key to get",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Get object url from minio",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Which bucket to get object from",
                        "name": "bucket",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "object key to get",
                        "name": "key",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.GetFileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperrors.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apperrors.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperrors.AppError"
                        }
                    }
                }
            }
        },
        "/file/upload": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "specify the bucket and file to upload",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Upload object to minio",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Which bucket to upload to",
                        "name": "bucket",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "file to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.UploadFileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperrors.AppError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/apperrors.AppError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperrors.AppError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apperrors.AppError": {
            "type": "object",
            "properties": {
                "httpCode": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "dto.DeleteFileRequestBody": {
            "type": "object",
            "required": [
                "fileKey"
            ],
            "properties": {
                "fileKey": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "dto.DeleteFileResponse": {
            "type": "object",
            "properties": {
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.GetFileResponse": {
            "type": "object",
            "properties": {
                "fileUrl": {
                    "type": "string"
                }
            }
        },
        "dto.UploadFileResponse": {
            "type": "object",
            "properties": {
                "fileKey": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}